// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface TrxRoot {
	TestRun: TestRun[];
}

export interface TestRun {
	"@_id": string;
	"@_name": string;
	"@_runUser": string;
	"@_xmlns": string;
	Times: Time[];
	TestSettings: TestSetting[];
	Results: Result[];
	TestDefinitions: TestDefinition[];
	TestEntries: TestRunTestEntry[];
	TestLists: TestRunTestList[];
	ResultSummary: ResultSummary[];
}

export interface ResultSummary {
	"@_outcome": string;
	Counters: { [key: string]: string }[];
}

export interface Result {
	UnitTestResult: UnitTestResult[];
}

export interface UnitTestResult {
	"@_executionId": string;
	"@_testId": string;
	"@_testName": string;
	"@_computerName": ComputerName;
	"@_duration": string;
	"@_startTime": string;
	"@_endTime": string;
	"@_testType": string;
	"@_outcome": Outcome;
	"@_testListId": string;
	"@_relativeResultsDirectory": string;
	Output: Output[];
}

export enum ComputerName {
	Surfacestudio = "SURFACESTUDIO",
}

export enum Outcome {
	Passed = "Passed",
}

export interface Output {
	StdOut: string;
	ErrorInfo: {
		Message: string,
		StackTrace: string,
	}
}

export interface TestDefinition {
	UnitTest: UnitTest[];
}

export interface UnitTest {
	"@_name": string;
	"@_storage": string;
	"@_id": string;
	Execution: Execution[];
	TestMethod: TestMethod[];
}

export interface Execution {
	"@_id": string;
}

export interface TestMethod {
	"@_codeBase": string;
	"@_adapterTypeName": AdapterTypeName;
	"@_className": ClassName;
	"@_name": string;
}

export enum AdapterTypeName {
	ExecutorMstestadapterV2 = "executor://mstestadapter/v2",
}

export enum ClassName {
	SampleTestsDarknessSampleDarknessTests = "Sample.Tests.Darkness.SampleDarknessTests",
	SampleTestsWorldSampleWorldTests = "Sample.Tests.World.SampleWorldTests",
}

export interface TestRunTestEntry {
	TestEntry: TestEntryTestEntry[];
}

export interface TestEntryTestEntry {
	"@_testId": string;
	"@_executionId": string;
	"@_testListId": string;
}

export interface TestRunTestList {
	TestList: TestListTestList[];
}

export interface TestListTestList {
	"@_name": string;
	"@_id": string;
}

export interface TestSetting {
	"@_name": string;
	"@_id": string;
	Deployment: Deployment[];
}

export interface Deployment {
	"@_runDeploymentRoot": string;
}

export interface Time {
	"@_creation": string;
	"@_queuing": string;
	"@_start": string;
	"@_finish": string;
}
