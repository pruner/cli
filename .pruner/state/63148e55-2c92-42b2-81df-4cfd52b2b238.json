{
	"tests": [
		{
			"passed": true,
			"id": 1,
			"name": "Sample.Tests.World.SampleWorldTests.Test_60s_HelloWorld",
			"duration": "00:00:00.3116231",
			"failure": {
				"stdout": [
					"Hello world 1",
					"Hello world 2",
					"Hello world 3",
					"Hello world 4",
					"Hello world 5",
					"Hello world 6",
					"Hello world 7",
					"Hello world 8"
				],
				"message": "Assert.AreEqual failed. Expected:<1>. Actual:<12>.",
				"stackTrace": [
					"at Sample.Tests.World.SampleWorldTests.RunScenario(Int32 count, Int32 argument) in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 53",
					"at Sample.Tests.World.SampleWorldTests.Test_60s_HelloWorld() in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 13"
				]
			}
		},
		{
			"passed": true,
			"id": 2,
			"name": "Sample.Tests.World.SampleWorldTests.Test_30s_HelloWorld",
			"duration": "00:00:00.0033754",
			"failure": {
				"stdout": [
					"Hello world 1",
					"Hello world 2",
					"Hello world 3",
					"Hello world 4",
					"Hello world 5",
					"Hello world 6",
					"Hello world 7",
					"Hello world 8"
				],
				"message": "Assert.AreEqual failed. Expected:<1>. Actual:<12>.",
				"stackTrace": [
					"at Sample.Tests.World.SampleWorldTests.RunScenario(Int32 count, Int32 argument) in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 53",
					"at Sample.Tests.World.SampleWorldTests.Test_30s_HelloWorld() in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 19"
				]
			}
		},
		{
			"passed": true,
			"id": 3,
			"name": "Sample.Tests.World.SampleWorldTests.Test_10s_HelloWorld",
			"duration": "00:00:00.0012028",
			"failure": {
				"stdout": [
					"Hello world 1",
					"Hello world 2",
					"Hello world 3",
					"Hello world 4",
					"Hello world 5",
					"Hello world 6",
					"Hello world 7",
					"Hello world 8"
				],
				"message": "Assert.AreEqual failed. Expected:<1>. Actual:<12>.",
				"stackTrace": [
					"at Sample.Tests.World.SampleWorldTests.RunScenario(Int32 count, Int32 argument) in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 53",
					"at Sample.Tests.World.SampleWorldTests.Test_10s_HelloWorld() in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 25"
				]
			}
		},
		{
			"passed": true,
			"id": 4,
			"name": "Sample.Tests.World.SampleWorldTests.Test_5s_HelloWorld",
			"duration": "00:00:00.0010333",
			"failure": {
				"stdout": [
					"Hello world 1",
					"Hello world 2",
					"Hello world 3",
					"Hello world 4",
					"Hello world 5",
					"Hello world 6",
					"Hello world 7",
					"Hello world 8"
				],
				"message": "Assert.AreEqual failed. Expected:<1>. Actual:<12>.",
				"stackTrace": [
					"at Sample.Tests.World.SampleWorldTests.RunScenario(Int32 count, Int32 argument) in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 53",
					"at Sample.Tests.World.SampleWorldTests.Test_5s_HelloWorld() in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 31"
				]
			}
		},
		{
			"passed": true,
			"id": 5,
			"name": "Sample.Tests.World.SampleWorldTests.Test_3s_HelloWorld",
			"duration": "00:00:00.0008669",
			"failure": {
				"stdout": [
					"Hello world 1",
					"Hello world 2",
					"Hello world 3",
					"Hello world 4",
					"Hello world 5",
					"Hello world 6",
					"Hello world 7",
					"Hello world 8"
				],
				"message": "Assert.AreEqual failed. Expected:<1>. Actual:<12>.",
				"stackTrace": [
					"at Sample.Tests.World.SampleWorldTests.RunScenario(Int32 count, Int32 argument) in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 53",
					"at Sample.Tests.World.SampleWorldTests.Test_3s_HelloWorld() in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 37"
				]
			}
		},
		{
			"passed": true,
			"id": 6,
			"name": "Sample.Tests.World.SampleWorldTests.Test_1s_HelloWorld",
			"duration": "00:00:00.0029160",
			"failure": {
				"stdout": [
					"Hello world 1",
					"Hello world 2",
					"Hello world 3",
					"Hello world 4",
					"Hello world 5",
					"Hello world 6",
					"Hello world 7",
					"Hello world 8"
				],
				"message": "Assert.AreEqual failed. Expected:<1>. Actual:<12>.",
				"stackTrace": [
					"at Sample.Tests.World.SampleWorldTests.RunScenario(Int32 count, Int32 argument) in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 53",
					"at Sample.Tests.World.SampleWorldTests.Test_1s_HelloWorld() in C:\\Users\\mathi\\source\\repos\\pruner\\cli\\tests\\dotnet\\sample\\Sample.Tests\\SampleWorldTests.cs:line 43"
				]
			}
		},
		{
			"passed": true,
			"id": 7,
			"name": "Sample.Tests.Darkness.SampleDarknessTests.Test_60s_HelloDarkness",
			"duration": "00:00:00.0039473",
			"failure": null
		},
		{
			"passed": true,
			"id": 8,
			"name": "Sample.Tests.Darkness.SampleDarknessTests.Test_30s_HelloDarkness",
			"duration": "00:00:00.0025371",
			"failure": null
		},
		{
			"passed": true,
			"id": 9,
			"name": "Sample.Tests.Darkness.SampleDarknessTests.Test_10s_HelloDarkness",
			"duration": "00:00:00.0004067",
			"failure": null
		},
		{
			"passed": true,
			"id": 10,
			"name": "Sample.Tests.Darkness.SampleDarknessTests.Test_5s_HelloDarkness",
			"duration": "00:00:00.0018993",
			"failure": null
		},
		{
			"passed": true,
			"id": 11,
			"name": "Sample.Tests.Darkness.SampleDarknessTests.Test_3s_HelloDarkness",
			"duration": "00:00:00.0016698",
			"failure": null
		},
		{
			"passed": true,
			"id": 12,
			"name": "Sample.Tests.Darkness.SampleDarknessTests.Test_1s_HelloDarkness",
			"duration": "00:00:00.0019208",
			"failure": null
		}
	],
	"files": [
		{
			"id": 1,
			"path": "tests/dotnet/sample/Sample/Program.cs"
		},
		{
			"id": 2,
			"path": "tests/dotnet/sample/Sample/SomeClass.cs"
		},
		{
			"id": 3,
			"path": "tests/dotnet/sample/Sample/SomeNotUsedClass.cs"
		},
		{
			"id": 4,
			"path": "tests/dotnet/sample/Sample/SomeOtherClass.cs"
		},
		{
			"id": 6,
			"path": "tests/dotnet/sample/Sample.Tests/SampleWorldTests.cs"
		},
		{
			"id": 7,
			"path": "tests/dotnet/sample/Sample.Tests/SampleDarknessTests.cs"
		}
	],
	"coverage": [
		{
			"fileId": 2,
			"lineNumber": 10,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 11,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 12,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 13,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 14,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 15,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 16,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 17,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 18,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 19,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 20,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 2,
			"lineNumber": 22,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 23,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 24,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 25,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 26,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 27,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 28,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 29,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 30,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 31,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 2,
			"lineNumber": 33,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 6,
			"lineNumber": 12,
			"testIds": [
				1
			]
		},
		{
			"fileId": 6,
			"lineNumber": 13,
			"testIds": [
				1
			]
		},
		{
			"fileId": 6,
			"lineNumber": 18,
			"testIds": [
				2
			]
		},
		{
			"fileId": 6,
			"lineNumber": 19,
			"testIds": [
				2
			]
		},
		{
			"fileId": 6,
			"lineNumber": 24,
			"testIds": [
				3
			]
		},
		{
			"fileId": 6,
			"lineNumber": 25,
			"testIds": [
				3
			]
		},
		{
			"fileId": 6,
			"lineNumber": 30,
			"testIds": [
				4
			]
		},
		{
			"fileId": 6,
			"lineNumber": 31,
			"testIds": [
				4
			]
		},
		{
			"fileId": 6,
			"lineNumber": 36,
			"testIds": [
				5
			]
		},
		{
			"fileId": 6,
			"lineNumber": 37,
			"testIds": [
				5
			]
		},
		{
			"fileId": 6,
			"lineNumber": 42,
			"testIds": [
				6
			]
		},
		{
			"fileId": 6,
			"lineNumber": 43,
			"testIds": [
				6
			]
		},
		{
			"fileId": 6,
			"lineNumber": 48,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 6,
			"lineNumber": 49,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 6,
			"lineNumber": 50,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 6,
			"lineNumber": 51,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 6,
			"lineNumber": 52,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 6,
			"lineNumber": 53,
			"testIds": [
				1,
				2,
				3,
				4,
				5,
				6
			]
		},
		{
			"fileId": 7,
			"lineNumber": 11,
			"testIds": [
				7
			]
		},
		{
			"fileId": 7,
			"lineNumber": 12,
			"testIds": [
				7
			]
		},
		{
			"fileId": 7,
			"lineNumber": 13,
			"testIds": [
				7
			]
		},
		{
			"fileId": 7,
			"lineNumber": 17,
			"testIds": [
				8
			]
		},
		{
			"fileId": 7,
			"lineNumber": 18,
			"testIds": [
				8
			]
		},
		{
			"fileId": 7,
			"lineNumber": 19,
			"testIds": [
				8
			]
		},
		{
			"fileId": 7,
			"lineNumber": 23,
			"testIds": [
				9
			]
		},
		{
			"fileId": 7,
			"lineNumber": 24,
			"testIds": [
				9
			]
		},
		{
			"fileId": 7,
			"lineNumber": 25,
			"testIds": [
				9
			]
		},
		{
			"fileId": 7,
			"lineNumber": 29,
			"testIds": [
				10
			]
		},
		{
			"fileId": 7,
			"lineNumber": 30,
			"testIds": [
				10
			]
		},
		{
			"fileId": 7,
			"lineNumber": 31,
			"testIds": [
				10
			]
		},
		{
			"fileId": 7,
			"lineNumber": 35,
			"testIds": [
				11
			]
		},
		{
			"fileId": 7,
			"lineNumber": 36,
			"testIds": [
				11
			]
		},
		{
			"fileId": 7,
			"lineNumber": 37,
			"testIds": [
				11
			]
		},
		{
			"fileId": 7,
			"lineNumber": 41,
			"testIds": [
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 42,
			"testIds": [
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 43,
			"testIds": [
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 48,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 49,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 50,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 51,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 52,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 53,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 54,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		},
		{
			"fileId": 7,
			"lineNumber": 55,
			"testIds": [
				7,
				8,
				9,
				10,
				11,
				12
			]
		}
	]
}